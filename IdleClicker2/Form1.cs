using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace IdleClicker2
{
    public partial class Form1 : Form
    {
        public double gold = 0;
        public double goldPerClick = 1;
        public double upgradeClickCost = 200;
        public double BaseUpgradeClickCost = 200;
        public double upgradeQTY = 0;

        //auto clicker variables
        public double autoClickerAmt = 30;
        public bool autoClickerOn = false;
        public double autoClickersPurch = 0;

        // multiplier1
        public double mulit1Cost = 50;
        public double multi1QTY = 0;

        // Buy auto-49'er
        public double _49erBaseCost = 100;
        public double _49erQTY = 0;
        public double _49erGeneratedAmt = 5;
        public double _49erCost = 100;

        // Buy auto-Drill
        public double _drillCost = 250;
        public double _drillQTY = 0;
        public double _drillGeneratedAmt = 25;
        public double _drillBaseCost = 250;

        public Form1()
        {
            InitializeComponent();
            btnUpgradeClick.Enabled = false;
            btnAutoClicker.Enabled = false;
            btnMulti1.Enabled = false;
        }

        public void UpdateForm()
        {
            // update the label that shows the player how much gold they have
            // lblGoldAmt.Text = "Gold: " + gold;
            lblGoldAmt.Text = String.Format("Gold: {0:N}", gold);
            lblGoldPerClick.Text = "Gold per click: " + goldPerClick;
            lblCostToUpgrade.Text = "Cost to Upgrade: " + upgradeClickCost;
            lblMulti1.Text = "Cost to buy: " + mulit1Cost;
            lblAutoCost.Text = "Cost of Auto Clicker: " + autoClickerAmt;
            lbl49erAmt.Text = "You have: " + _49erQTY;
            lbl49erCost.Text = "Cost of 49'er: " + _49erCost;
            lbl49goldsec.Text = "49'ers collect: " + _49erGeneratedAmt + " gold/sec.";
            lblDrillQTY.Text = "You have: " + _drillQTY;
            lblDrillCost.Text = "Cost of Drill: " + _drillCost;
            lblDrillGoldSec.Text = "Drills collect: " + _drillGeneratedAmt + " gold/sec.";

            // Update the auto-generators label showing how much they are making
            double totalAutoGenerated = ((_49erQTY * _49erGeneratedAmt) + (_drillQTY * _drillGeneratedAmt));
            lblGeneratorTotal.Text = "Generators are creating: " + totalAutoGenerated + " gold/sec.";

            // Update the Total gold/sec. label
            double total = totalAutoGenerated + (goldPerClick * autoClickersPurch);
            lblTotalGoldSec.Text = "Total gold being produced: " + total + " gold/sec.";
        }

        private void btnGetGold_Click(object sender, EventArgs e)
        {
            // increase the amount of gold player has when they click on the Get Gold button
            gold += goldPerClick;

            // run the UpdateForm to show that the user has more gold
            UpdateForm();
        }

        private void btnUpgradeClick_Click(object sender, EventArgs e)
        {
            // Upgrade the clicker amount per click
            if(gold >= upgradeClickCost){
                goldPerClick++;
                gold = gold - upgradeClickCost;
                upgradeQTY++;
                upgradeClickCost = BaseUpgradeClickCost * (Math.Pow(1.05, upgradeQTY));
                UpdateForm();
            } else {
                MessageBox.Show("You do not have enough gold", "Sorry, but...");
            }
        }

        private void timerAutoRefresh_Tick(object sender, EventArgs e)
        {
            UpdateForm();
            if (autoClickerOn == true)
            {
                int i = 1;
                while (i <= autoClickersPurch)
                {
                    btnGetGold.PerformClick();
                    i++;
                }
            }
        }

        private void btnAutoClicker_Click(object sender, EventArgs e)
        {
            if (gold >= autoClickerAmt)
            {
                autoClickerOn = true;
                gold -= autoClickerAmt;
                autoClickerAmt = Math.Floor(autoClickerAmt * 1.35); // increase cost by 35%
                autoClickersPurch++;
                UpdateForm();
            }
        }

        private void btnMulti1_Click(object sender, EventArgs e)
        {
            if (gold >= mulit1Cost)
            {
                gold -= mulit1Cost;
                multi1QTY++;
                _49erGeneratedAmt = (Math.Ceiling(_49erGeneratedAmt * 1.10) * multi1QTY);
                _drillGeneratedAmt = (Math.Ceiling(_drillGeneratedAmt * 1.10) * multi1QTY);
                mulit1Cost = Math.Ceiling(mulit1Cost * 2.50);
                UpdateForm();
            }
        }

        private void timerUpgradeCheck_Tick(object sender, EventArgs e)
        {
            // show Upgrade Click button
            if (gold >= upgradeClickCost)
            {
                btnUpgradeClick.Enabled = true;
            }
            else { btnUpgradeClick.Enabled = false; }

            // show auto click button
            if (gold >= autoClickerAmt)
            {
                btnAutoClicker.Enabled = true;
            }
            else { btnAutoClicker.Enabled = false; }

            // show multiplier button
            if (gold >= mulit1Cost)
            {
                btnMulti1.Enabled = true;
            }
            else { btnMulti1.Enabled = false; }

            // show 49'er button and image button
            if (gold >= _49erCost)
            {
                btnBuy49er.Enabled = true;
                pic49er.Visible = true;
            }
            else { btnBuy49er.Enabled = false; pic49er.Visible = false; }

            // show drill button
            if (gold >= _drillCost)
            {
                btnBuyDrill.Enabled = true;
                picDrill.Visible = true;
            }
            else { btnBuyDrill.Enabled = false; picDrill.Visible = false; }
        }

        private void btnBuy49er_Click(object sender, EventArgs e)
        {
            if(gold >= _49erCost)
            {
                gold -= _49erCost;
                _49erQTY++;
                // _49erBaseCost = Math.Floor(_49erBaseCost * 1.25); *Don't need?
                timerExtraGold.Enabled = true;
                _49erCost = _49erBaseCost * (Math.Pow(1.07, _49erQTY));
                UpdateForm();
            }
        }

        private void timerExtraGold_Tick(object sender, EventArgs e)
        {
            // 49'er tick
            if (_49erQTY > 0)
            {
                gold += (_49erGeneratedAmt * _49erQTY);
            }

            // drill tick
            if (_drillQTY > 0)
            {
                gold += (_drillGeneratedAmt * _drillQTY);
            }

            // Refresh the form
            UpdateForm();
        }

        private void exitToolStripMenuItem_Click(object sender, EventArgs e)
        {
            Application.Exit();
        }

        private void aboutToolStripMenuItem_Click(object sender, EventArgs e)
        {
            About about = new About();
            about.Show();
        }

        private void btnBuyDrill_Click(object sender, EventArgs e)
        {
            // check to see if the player has enough gold
            if (gold >= _drillCost)
            {
                gold -= _drillCost; // subtract gold from user
                _drillQTY++; // increse the amount of 'drills'
                _drillCost = _drillBaseCost * (Math.Pow(1.07, _drillQTY));
                // _drillCost = Math.Floor(_drillCost * 1.35); // increase the cost of the next drill by 35% *don't need
                timerExtraGold.Enabled = true; // ensure that the timer is running. More drill information can be found in there.
                UpdateForm(); // update labels
            }
        }
    }
}
